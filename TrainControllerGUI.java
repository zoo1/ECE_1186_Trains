import java.lang.Math;
import java.lang.Object;
import java.util.ArrayList;
//package learn;
 
public class TrainControllerGUI extends javax.swing.JFrame {
    public int id;
    public static int speedLimit = 60;
    public double weight = 150.0;
    public double currentPower = 0.0;
    public int numberOfPassengers = 0;
    public int recSpeed;
    public Train train = new Train(106);
    public int length;
    //public TrainController tc = new TrainController();
    public double power = 0;
    
    public TrainControllerGUI() {
         System.out.println("Train Controller GUI Established");
        id = 50;
        initComponents();
    }
     
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
    
        //train ID
        trainIDLabel = new javax.swing.JLabel();
        trainID = new javax.swing.JLabel(); 
        trainIDLabel.setText("Train ID:");
        trainID.setText(id+ "");      //generate and display random ID number for train
        
        
        
        //Wayside speed
        waysideLabel = new javax.swing.JLabel();
        waysideLabel.setText("Distance to Next Station: ");
        waysideSpeed = new javax.swing.JLabel();
        recSpeed = (int)(Math.random()*60);
        waysideSpeed.setText(speedLimit + " km/hr");
        speedLimitLabel = new javax.swing.JLabel();
        speedLimitLabel.setText("Speed Limit: 60 km/hr");
        
         
        
         
        //passengers
        passengerTextField = new javax.swing.JTextField();
        passengerLabel = new javax.swing.JLabel();
        
        passengersOnTrainLabel = new javax.swing.JLabel(); 
        passengersOnTrainLabel.setText("Number of Passengers on Train: ");
        passengersOnTrain = new javax.swing.JLabel();
        passengersOnTrain.setText("0");
        
        //set-point velocity
        setpointTextField = new javax.swing.JTextField();
        setpointLabel = new javax.swing.JLabel();
        convertButton = new javax.swing.JButton();
        
        currentPowerLabel = new javax.swing.JLabel();
        currentPowerLabel.setText("Current Power: ");
        currPower = new javax.swing.JLabel(); 
        //brake
        manualBrakeLabel = new javax.swing.JLabel(); 
        manualBrake = new javax.swing.JCheckBox("Activate"); 
        //doors
        leftDoors = new javax.swing.JCheckBox("Left");
        rightDoors = new javax.swing.JCheckBox("Right"); 
        doors = new javax.swing.JLabel();  
        //actual speed
        actualSpeed = new javax.swing.JLabel();
        currentSpeedLabel = new javax.swing.JLabel();
        //lights
        lightsOn = new javax.swing.JRadioButton("On");
        lightsOff = new javax.swing.JRadioButton("Off");
        lights = new javax.swing.JLabel();
        //power change
        powerChangeLabel = new javax.swing.JLabel(); 
        powerChange = new javax.swing.JLabel(); 
        
        //faults
        faultLabel = new javax.swing.JLabel();
        powerSafeLabel = new javax.swing.JLabel();
        powerSafe = new javax.swing.JCheckBox("Activate"); 
        
        //Announcements
        AnnouncementLabel = new javax.swing.JLabel();
        Announcement = new javax.swing.JLabel();
        AnnouncementLabel.setText("ANNOUNCEMENTS"); 
        
        manualBrakeLabel.setText("Manual Brake");
        powerChangeLabel.setText("Target Power: ");
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Train Controller");
        setpointLabel.setText("Set-Point Velocity");
        
        
        passengerLabel.setText("Passengers");
        actualSpeed.setText("0 km/hr");
        currentSpeedLabel.setText("Current Speed:"); 
        doors.setText("Doors");
        
        faultLabel.setText("Fault Safe Modes");
        lights.setText("Lights");
        
        powerSafeLabel.setText("Train Engine Failure");
        
        convertButton.setText("Update Train");
        convertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertButtonActionPerformed(evt);
            }
        }
        
        );
 
        //currentPowerLabel.setText("Watts");
 
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(trainIDLabel))    
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(trainID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    
                    
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(setpointTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(setpointLabel))
                    //passengers    
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(passengerTextField)
                        //.addComponent(passengerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(passengerLabel))
                    //brake
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(manualBrakeLabel))    
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(manualBrake)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))    
                        
                        
                    //doors
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(doors))    
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(leftDoors)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rightDoors))
                    //Lights
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lights))    
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lightsOn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lightsOff)) 
                     //Fault
                     .addGroup(layout.createSequentialGroup()
                        .addComponent(faultLabel)) 
                        
                     .addGroup(layout.createSequentialGroup()
                        .addComponent(powerSafeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(powerSafe))
                          
                    //speed    
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(currentSpeedLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(actualSpeed))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(waysideLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(waysideSpeed))    
                     .addGroup(layout.createSequentialGroup()
                        .addComponent(speedLimitLabel))    
                        
                    //passengers on train
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(passengersOnTrainLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(passengersOnTrain))
                    
                    
                    //power change group
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(powerChangeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(powerChange))
                     
                    //power 
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(currentPowerLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(currPower))
                     
                    //Announcements
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AnnouncementLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Announcement))      
                        
                    .addGroup(layout.createSequentialGroup()//update and power group
                        .addComponent(convertButton)))
                        //.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        //.addComponent(powerLabel)))
                    
                .addContainerGap(27, Short.MAX_VALUE))
        );
 
        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {convertButton, setpointTextField});
 
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                //trainID
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(trainIDLabel))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)//doors
                    .addComponent(trainID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                
                //setpoint
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(setpointTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(setpointLabel))
                .addContainerGap()
                //passengers
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)//passengers
                    .addComponent(passengerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passengerLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                //brake
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(manualBrakeLabel))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)//doors
                    .addComponent(manualBrake))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                
                
                //doors
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doors))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)//doors
                    //.addComponent(leftDoors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(leftDoors)
                    .addComponent(rightDoors))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                //lights
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lights))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)//doors
                    //.addComponent(lightsOn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lightsOn)
                    .addComponent(lightsOff))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                
                //faults
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(faultLabel))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)//doors
                    .addComponent(powerSafeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(powerSafe))
                
                //speed
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)//doors
                    .addComponent(currentSpeedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(actualSpeed))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)//doors
                    .addComponent(waysideLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(waysideSpeed))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(speedLimitLabel))
                
                //passengers on train
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passengersOnTrainLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passengersOnTrain))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                
                
                //power change
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)//doors
                    .addComponent(powerChangeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(powerChange))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currentPowerLabel)
                    .addComponent(currPower))
                
                //Announcements
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)//doors
                    .addComponent(AnnouncementLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Announcement))
                
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(convertButton))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        pack();
    this.setVisible(true);
    }
    // </editor-fold>//GEN-END:initComponents
    
    public void update(Train train)
      {
            //System.out.println("Actual Speed = " + train.getSpeed());
         //actual speed
         //actualSpeed.setText(train.getSpeed() + " km/hr");        
         //id
            //System.out.println("Train ID = " + train.getID());
         trainID.setText(train.getID()+ "");
         //speedlimit
            //System.out.println("Speed Limit = " + train.getSpeedLimit());
         speedLimitLabel.setText("Speed Limit: "+ train.getSpeedLimit());
         //CurrentPower
            //System.out.println("Current Power = " + train.getPower());   
         powerChange.setText(train.getTargetPower() + " Watts");
         //distance to next station
            //System.out.println("Distance to Next Station = " + (train.getAuthority()-train.getPos()) + "m");
         waysideSpeed.setText((train.getAuthority()-train.getPos()) + "m");
         
         //current Speed
         actualSpeed.setText(train.getSpeed() + "km/hr");
         //Update Announcement
         if((train.getAuthority() - train.getPos()) <= train.getStopping() && train.getAuthority() != 0 && train.getPos() != 0)
            Announcement.setText("We will be arriving at " + train.getBeacon().getStationName() + " shortly!");
         else
            Announcement.setText("");
      }
    
    public void updatePower(double power)
      {
         currPower.setText(power + " Watts");
      
      }     
    
    
    
    private void convertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertButtonActionPerformed

               
        double numPassengers = Double.parseDouble(passengerTextField.getText()); 
        //double power; 
        //tc.changeNumPassengers((int)Double.parseDouble(passengerTextField.getText()), train);
        passengersOnTrain.setText(train.getPassengers() + "");    
        
        
        if(leftDoors.isSelected() == true)
            {
               train.setDoors(1);
            }
            
        if(rightDoors.isSelected() == true)
            {
               if (leftDoors.isSelected() == false)
                  train.setDoors(2);
               else
                  train.setDoors(3);
            }
        if(leftDoors.isSelected() == false && rightDoors.isSelected() == false)
            {
               train.setDoors(0);
            }    
         
        System.out.println(setpointTextField.getText());
        train.setSPV((int)Double.parseDouble(setpointTextField.getText()));    
        
        actualSpeed.setText(train.getSpeed() + " km/hr");
        
        //power = power + t.getPowerChange(train);
        //if (power <0)
        //    power = 0;
        currPower.setText(power + " Watts");
        //powerChange.setText(tc.getPowerChange(train) + "");
        //if((int)Double.parseDouble(setpointTextField.getText()) <= speedLimit)
          //  {
                  
               //power = Math.pow(((Double.parseDouble(setpointTextField.getText()))/234),3) * numPassenger * weight *745.699872;
               //powerLabel.setText(power + " Watts");
               //powerChange.setText(power - currentPower + " Watts");
            //   currentPower = power;
           // }
        train.setBrakes(powerSafe.isSelected());
        passengerTextField.setText(0 + "");
        train.setBrakes(manualBrake.isSelected());
        if (train.getServiceBrake() == true)
            power = 0;
            
        recSpeed = (int)(Math.random()*60);
        waysideSpeed.setText(recSpeed + " km/hr");
        //if(manualBrake.isSelected() == true)
          //  {
               //tc.setBrake(manualBrake.isSelected(), train);
               //powerChange.setText(0-currentPower + " Watts");
               //currentPower = 0;
          //  } 
        
         //passengerTextField.setText(traincon(100) + ""); 
            
    }//GEN-LAST:event_convertButtonActionPerformed
     
    public int traincon(int a)
      {
         return -a;
      } 
    
    
    
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TrainControllerGUI().setVisible(true);
                
                //new CelsiusConverterGUI().setVisible(true);
            }
        });
    }
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel passengerLabel;
    private javax.swing.JButton convertButton;
    private javax.swing.JLabel currPower;
    private javax.swing.JLabel currentPowerLabel;
    private javax.swing.JTextField passengerTextField;
    private javax.swing.JTextField setpointTextField;
    private javax.swing.JLabel setpointLabel;
    private javax.swing.JCheckBox leftDoors;
    private javax.swing.JCheckBox rightDoors;
    private javax.swing.JLabel actualSpeed;
    private javax.swing.JLabel currentSpeedLabel;
    private javax.swing.JLabel doors;
    private javax.swing.JRadioButton lightsOn;
    private javax.swing.JRadioButton lightsOff;
    private javax.swing.JLabel lights;
    private javax.swing.JLabel faultLabel;
    private javax.swing.JLabel powerSafeLabel;
    private javax.swing.JCheckBox powerSafe;
    //private javax.swing.JRadioButton powerSafeOff;
    private javax.swing.JLabel powerChange;
    private javax.swing.JLabel powerChangeLabel;
    private javax.swing.JLabel manualBrakeLabel;
    private javax.swing.JCheckBox manualBrake;
    private javax.swing.JLabel trainIDLabel;
    private javax.swing.JLabel trainID;
    private javax.swing.JComboBox trainList;
    private javax.swing.JLabel passengersOnTrainLabel;
    private javax.swing.JLabel passengersOnTrain;
    private javax.swing.JLabel waysideLabel;
    private javax.swing.JLabel waysideSpeed;
    private javax.swing.JLabel speedLimitLabel;
    private javax.swing.JLabel AnnouncementLabel; 
    private javax.swing.JLabel Announcement;
    // End of variables declaration//GEN-END:variables
     
}